<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd"> 
 
	<!-- 自动扫描 --> 
	<context:component-scan base-package="com.lc.crm.dk"> 
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

 
	<!-- 注解支持,以及解决返回中文乱码 --> 
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:message-converters>
			<bean
				class="com.lc.crm.dk.base.charset.UTF8HttpMessageConverter" />
		</mvc:message-converters> 
	</mvc:annotation-driven>
	
	<!-- 日期格式统一转换器 -->
	 <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <!-- 此处可以定义多种转换类型 -->
                <bean class="com.lc.crm.dk.base.converter.DateConverter" />
            </set>
        </property>
    </bean>

	
    <!-- jsp视图解析 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
    
    

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 100M 100*1024*1024 -->
		<property name="maxUploadSize" value="104857600" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	
	
	<mvc:interceptors> 
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		<!--  <bean class="com.lc.crm.app.base.interceptor.LinkInterceptor" /> --> 
		<!-- <mvc:interceptor>
			<mvc:mapping path="/testCourse/query/**" />
			定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的
			<bean class="com.xxx.interceptor.LoginInterceptor" />
		</mvc:interceptor> -->
		
		<!-- 会话拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.lc.crm.dk.base.interceptor.SessionInterceptor" />
		</mvc:interceptor>
		
	</mvc:interceptors>
	
	
	
	<!-- 配置静态资源,已经在web.xml中做了配置,使用这种方式有一点不好就是interceptors会进行拦截,并层层过滤，所以就在web.xml中配置了-->
	<!-- <mvc:resources location="/static/" mapping="/static/**"></mvc:resources> -->


	<!-- 异常统一处理页面 --> 
	<bean
		class="com.lc.crm.dk.base.handler.ExpandSimpleMappingExceptionResolver">
		<!--定义默认的异常处理页面，当该异常类型的注册时使用 -->
		<property name="defaultErrorView" value="errorPages/error"></property>
		<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->
		<property name="exceptionAttribute" value="ex"></property>
		<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->
		<!-- <property name="exceptionMappings"> <props> <prop key="java.lang.ArithmeticException">errorPages/arithmeticError</prop> 
			<prop key="cn.lc.crm.app.base.common.exception.ParameterException">errorPages/error-parameter</prop> 
			</props> </property> -->
		<!--设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN" />
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500" />
	</bean>

</beans>